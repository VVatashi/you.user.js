{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/config.ts","src/imageboard.ts","src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Config","name","trip","myPostStyle","replyPostStyle","replyLinkStyle","this","save","config","GM_setValue","localStorageKey","JSON","stringify","load","parse","GM_getValue","default","ImageBoard","adminBarSelector","postSelector","postBodySelector","nameSelector","tripSelector","prototype","getAdminBar","$","first","getPosts","getName","post","find","text","getTripcode","getPostBody","posts","getPostBodyText","getPostBodyLinks","checkDomain","domains","window","location","hostname","indexOf","createCss","css","document","createElement","type","innerHTML","myPostClass","replyPostClass","replyLinkClass","configFormClass","head","appendChild","createForm","configNameFieldClass","configTripFieldClass","configMyPostStyleFieldClass","configReplyPostStyleFieldClass","configReplyLinkStyleFieldClass","configToogleButtonClass","configSaveButtonClass","configDefaultButtonClass","imageboard","after","click","toggle","val","config_1","hide","main","processedClass","newPosts","not","myNewPosts","filter","index","element","addClass","myNewPostsIds","map","attr","match","myPostsIds","concat","replies","replyBodyText","each","linkText","imageboard_1","ready","setInterval"],"mappings":"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","file":"you.user.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class Config {\r\n    public name: string;\r\n    public trip: string;\r\n    public myPostStyle: string;\r\n    public replyPostStyle: string;\r\n    public replyLinkStyle: string;\r\n\r\n    private constructor(name: string, trip: string, myPostStyle: string, replyPostStyle: string, replyLinkStyle: string) {\r\n        this.name = name;\r\n        this.trip = trip;\r\n        this.myPostStyle = myPostStyle;\r\n        this.replyPostStyle = replyPostStyle;\r\n        this.replyLinkStyle = replyLinkStyle;\r\n    }\r\n\r\n    public static readonly default: Config = new Config('Name', '!Trip',\r\n        `{ box-shadow: 6px 0 2px -2px rgba(97,107,134,.8), -6px 0 2px -2px rgba(97,107,134,.8); }`,\r\n        `{ box-shadow: 6px 0 2px -2px rgba(157,47,208,.8), -6px 0 2px -2px rgba(157,47,208,.8); }`,\r\n        `:after { content: ' (You)'; }`);\r\n\r\n    private static readonly localStorageKey = 'you-config';\r\n\r\n    public static save(config: Config) {\r\n        GM_setValue(Config.localStorageKey, JSON.stringify(config));\r\n    }\r\n\r\n    public static load(): Config {\r\n        return JSON.parse(GM_getValue(Config.localStorageKey, JSON.stringify(Config.default)));\r\n    }\r\n}\r\n","export class ImageBoard {\r\n    private readonly adminBarSelector = '.adminbar, #adminbar, .boardlist, .menu, .board-list';\r\n    private readonly postSelector = 'td.reply[id], div.reply[id], td.post[id], div.post[id], div.thread_OP[id], div.thread_reply[id]';\r\n    private readonly postBodySelector = 'blockquote, .body, .postbody, .post_body';\r\n    private readonly nameSelector = '.postername, .name, .commentpostername, .poster-name';\r\n    private readonly tripSelector = '.postertrip, .trip, .tripcode';\r\n\r\n    public getAdminBar(): JQuery {\r\n        return $(this.adminBarSelector).first();\r\n    }\r\n\r\n    public getPosts(): JQuery {\r\n        return $(this.postSelector);\r\n    }\r\n\r\n    public getName(post: JQuery): string {\r\n        return post.find(this.nameSelector).text();\r\n    }\r\n\r\n    public getTripcode(post: JQuery): string {\r\n        return post.find(this.tripSelector).text();\r\n    }\r\n\r\n    public getPostBody(posts: JQuery): JQuery {\r\n        return posts.find(this.postBodySelector);\r\n    }\r\n\r\n    public getPostBodyText(post: JQuery): string {\r\n        return this.getPostBody(post).text();\r\n    }\r\n\r\n    public getPostBodyLinks(posts: JQuery): JQuery {\r\n        return this.getPostBody(posts).find('a');\r\n    }\r\n}\r\n","import { Config } from './config';\r\nimport { ImageBoard } from './imageboard';\r\n\r\nconst configFormClass = 'you-config-form';\r\nconst myPostClass = 'you-post-my';\r\nconst replyPostClass = 'you-post-reply';\r\nconst replyLinkClass = 'you-post-reply-link';\r\n\r\nlet config: Config = Config.default;\r\nlet imageboard: ImageBoard = new ImageBoard();\r\nlet myPostsIds: string[] = [];\r\n\r\nfunction checkDomain() {\r\n    const domains = [\r\n        '2ch.hk',\r\n        'dobrochan.com',\r\n        'iichan.hk',\r\n        'syn-ch.com',\r\n        '2-ch.su',\r\n        'nowere.net',\r\n        '410chan.org',\r\n        'kurisa.ch',\r\n        'chuck.dfwk.ru',\r\n        'owlchan.ru',\r\n        'haibane.ru',\r\n        'volgach.ru',\r\n        'hohoemy.exach.com',\r\n        'zerochan.ru',\r\n        'haruhichan.ovh',\r\n        'chaos.cyberpunk.us',\r\n        '02ch.in',\r\n        'ozuchan.ru',\r\n        'dvach.hut2.ru',\r\n        '2watch.su'\r\n    ];\r\n\r\n    for (let i = 0; i < domains.length; i++) {\r\n        if (window.location.hostname.indexOf(domains[i]) != -1)\r\n            return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction createCss() {\r\n    let css = document.createElement(\"style\");\r\n    css.type = \"text/css\";\r\n\r\n    css.innerHTML = `\r\n.${myPostClass}${config.myPostStyle}\r\n\r\n.${replyPostClass}${config.replyPostStyle}\r\n\r\n.${replyLinkClass}${config.replyLinkStyle}\r\n\r\nform.${configFormClass} {\r\n    position: absolute;\r\n    background-color: white;\r\n    box-shadow: 0px 2px 6px 0px rgba(97,107,134,.8);\r\n    padding: 12px 16px;\r\n    z-index: 1;\r\n    min-width: 30%;\r\n}\r\n\r\nform.${configFormClass} table, form.${configFormClass} p {\r\n    color: black;\r\n    background-color: white;\r\n    width: 100%;\r\n}\r\n\r\nform.${configFormClass} tr, form.${configFormClass} textarea {\r\n    width: 100%;\r\n}`;\r\n\r\n    document.head.appendChild(css);\r\n}\r\n\r\nfunction createForm() {\r\n    const configNameFieldClass = 'you-config-name';\r\n    const configTripFieldClass = 'you-config-trip';\r\n    const configMyPostStyleFieldClass = 'you-config-mypost-style';\r\n    const configReplyPostStyleFieldClass = 'you-config-replypost-style';\r\n    const configReplyLinkStyleFieldClass = 'you-config-replylink-style';\r\n\r\n    const configToogleButtonClass = 'you-config-toogle';\r\n    const configSaveButtonClass = 'you-config-save';\r\n    const configDefaultButtonClass = 'you-config-default';\r\n\r\n    imageboard.getAdminBar().after(`\r\n[ <a class=\"${configToogleButtonClass}\">(You) config</a> ]\r\n<br />\r\n<form class=\"${configFormClass}\">\r\n    <table>\r\n        <tr><td>Name:</td><td><input type=\"text\" class=\"${configNameFieldClass}\" value=\"${config.name}\" /></td></tr>\r\n        <tr><td>Trip:</td><td><input type=\"text\" class=\"${configTripFieldClass}\" value=\"${config.trip}\" /></td></tr>\r\n        <tr><td>My post css:</td><td><textarea class=\"${configMyPostStyleFieldClass}\">${config.myPostStyle}</textarea></td></tr>\r\n        <tr><td>Reply post css:</td><td><textarea class=\"${configReplyPostStyleFieldClass}\">${config.replyPostStyle}</textarea></td></tr>\r\n        <tr><td>Reply link css:</td><td><textarea class=\"${configReplyLinkStyleFieldClass}\">${config.replyLinkStyle}</textarea></td></tr>\r\n        <tr><td colspan=\"2\"><button class=\"${configSaveButtonClass}\">Save</button><button class=\"${configDefaultButtonClass}\">Restore defaults</button></td></tr>\r\n    </table>\r\n    <p>Reload page to apply changes.</p>\r\n</form>\r\n`);\r\n\r\n    $('a.' + configToogleButtonClass).click(() => {\r\n        $('form.' + configFormClass).toggle();\r\n        return false;\r\n    });\r\n\r\n    $('button.' + configSaveButtonClass).click(() => {\r\n        config.name = $('input.' + configNameFieldClass).val();\r\n        config.trip = $('input.' + configTripFieldClass).val();\r\n        config.myPostStyle = $('textarea.' + configMyPostStyleFieldClass).val();\r\n        config.replyPostStyle = $('textarea.' + configReplyPostStyleFieldClass).val();\r\n        config.replyLinkStyle = $('textarea.' + configReplyLinkStyleFieldClass).val();\r\n        Config.save(config);\r\n        return false;\r\n    });\r\n\r\n    $('button.' + configDefaultButtonClass).click(() => {\r\n        config = Config.default;\r\n        $('input.' + configNameFieldClass).val(config.name);\r\n        $('input.' + configTripFieldClass).val(config.trip);\r\n        $('textarea.' + configMyPostStyleFieldClass).val(config.myPostStyle);\r\n        $('textarea.' + configReplyPostStyleFieldClass).val(config.replyPostStyle);\r\n        $('textarea.' + configReplyLinkStyleFieldClass).val(config.replyLinkStyle);\r\n        Config.save(config);\r\n        return false;\r\n    });\r\n\r\n    $('form.' + configFormClass).hide();\r\n}\r\n\r\nfunction main() {\r\n    const processedClass = 'you-processed';\r\n\r\n    let newPosts = imageboard.getPosts().not('.' + processedClass);\r\n    let myNewPosts = newPosts.filter((index, element) => {\r\n        let name = imageboard.getName($(element));\r\n        let trip = imageboard.getTripcode($(element));\r\n\r\n        return name.indexOf(config.name) != -1 && trip.indexOf(config.trip) != -1;\r\n    });\r\n\r\n    myNewPosts.addClass(myPostClass);\r\n\r\n    let myNewPostsIds = $.map(myNewPosts, (element, index) => {\r\n        return $(element).attr('id').match(/\\d+/)[0];\r\n    });\r\n\r\n    myPostsIds = myPostsIds.concat(myNewPostsIds);\r\n\r\n    let replies = newPosts.filter((index, element) => {\r\n        let replyBodyText = imageboard.getPostBodyText($(element));\r\n\r\n        for (let i = 0; i < myPostsIds.length; i++) {\r\n            if (replyBodyText.indexOf('>>' + myPostsIds[i]) != -1)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n\r\n    replies.addClass(replyPostClass);\r\n\r\n    imageboard.getPostBodyLinks(replies).each((index, element) => {\r\n        let linkText = $(element).text();\r\n\r\n        for (let i = 0; i < myPostsIds.length; i++) {\r\n            if (linkText == '>>' + myPostsIds[i]) {\r\n                $(element).addClass(replyLinkClass);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n\r\n    newPosts.addClass(processedClass);\r\n}\r\n\r\n$(document).ready(() => {\r\n    if (!checkDomain())\r\n        return;\r\n\r\n    config = Config.load();\r\n    createCss();\r\n    createForm();\r\n    main();\r\n\r\n    setInterval(main, 10000);\r\n});\r\n"]}